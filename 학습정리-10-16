1.메소드 오버로딩에 대하여 설명하시오.
- 같은 함수이름으로 다른 타입 or 같은 타입이면 파라미터의 개수가 다른 함수를 의미한다.

2.메소드 오버로딩을 적용한 대표적인 함수는?
- print()함수

3.this 함수에 대하여 설명하시오.
- 자기 자신의 생성자를 호출할 때 사용하는 함수이다.

4.this 의 용도는?
- 1. 함수로써 this는 자기 자신의 생성자를 호출할 때 사용
  2. 키워드로써 this는 인스턴스 변수와 함수나 생성자의 변수명이 같을 때 인스턴스 필드임을 명확히 하기 위해 사용
 
5.스트링 객체를 생성하는 2가지 방법은 무엇인가?
- String 변수명 = new String("String");
  String 변수명 = "String";
  
6. 아래의 결과를 예측하고,이유를 설명하시오.

String str1 = "Simple String"; 
String str2 = "Simple String";


String str3 = new String("Simple String");
String str4 = new String("Simple String");

//참조변수의 참조 값 비교
if(str1 == str2)
   System.out.println("str1과 str2는 동일 인스턴스 참조");
else
   System.out.println("str1과 str2는 다른 인스턴스 참조");

//참조변수의 참조 값 비교
if(str3 == str4)
   System.out.println("str3과 str4는 동일 인스턴스 참조");
else
   System.out.println("str3과 str4는 다른 인스턴스 참조");
   
실행 결과   
str1과 str2는 동일 인스턴스 참조
str3과 str4는 다른 인스턴스 참조

7.immutable 에 대하여 설명하시오.
- immutable이란 변경할 수 없는 객체를 의미한다.

8.사용자로부터 받은 문자열(영문으로)에서 자음과 모음 개수를 계산하는 프로그램을 작성
입력:abcd 
출력:

총글자수는 4개
자음:3 개
모음:1 개

public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int consonant_count = 0; //자음 개수
		int vowel_count = 0; //모음 개수
		
		System.out.print("영문자를 입력하세요 : ");
		String eng = sc.next();
		
		for (int i = 0; i < eng.length(); i++) {
			if (eng.charAt(i) == 'A' || eng.charAt(i) == 'a' || eng.charAt(i) == 'E' || eng.charAt(i) == 'e'|| eng.charAt(i) == 'I' || eng.charAt(i) == 'i' || eng.charAt(i) == 'O' || eng.charAt(i) == 'o' || eng.charAt(i) == 'U' || eng.charAt(i) == 'u') {
				vowel_count++; //모음 개수 증가
			} else {
				consonant_count++; //자음 개수 증가
			}
		}
		System.out.println("자음 개수는 : " + consonant_count + "개");
		System.out.println("모음 개수는 : " + vowel_count + "개");
	}

9.사용자에게 받은 문자열을 역순으로 화면에 출력하는 프로그램을 작성하시오.
입력:abcde
출력:edcba

public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.print("문자열을 입력하세요 : ");
		String str1 = sc.next();
		
		for (int i = str1.length(); i > 0; i--) {
			System.out.print(str1.charAt(i-1));
		}
		
	}

10.사용자로부터 키를 입력 받아서 표준 체중을 계산한 후에 사용자의 체중과 비교하여 
저체중인지, 표준 인지, 과체중인지를 판단하는 프로그램을 작성하라. 
표준 체중 계산식은 다음을 사용하라.
표준체중(kg) = ( 키(cm) - 100 ) * 0.9

입력:
키(cm)를 입력하세요. : 193
체중(kg)을 입력하세요. : 25
출력:
표준 체중은 83.7입니다.
당신은 저체중 입니다. 

import java.util.Scanner;

class StandardWeight{
	private int height;
	private int weight;
	
	public StandardWeight(int height, int weight) {
		this.height = height;
		this.weight = weight;
	}
	
	public double getStandardWeight() {
		return (height - 100) * 0.9;
	}
	
	public void standardShow() {
		if (this.weight > getStandardWeight()) {
			System.out.println("당신은 과체중입니다.");
		} else if (this.weight == getStandardWeight()) {
			System.out.println("당신은 정상체중입니다.");
		} else {
			System.out.println("당신은 저체중입니다.");
		}
	}
}

public class WeightCompare {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int height; //키
		int weight; //몸무게
		
		System.out.print("키(cm)를 입력하세요 : ");
		height = sc.nextInt();
		System.out.print("체중(kg)을 입력하세요 : ");
		weight = sc.nextInt();
		StandardWeight sw = new StandardWeight(height, weight);
		
		System.out.println("표준 체중은 " + sw.getStandardWeight() + "입니다.");
		sw.standardShow();
		
	}

}
