1. 함수는 어떻게 알아 볼수있는가?
- 

2. 함수 호출 하는 법은?
- 함수명(매개변수,...);

3. 함수 만드는 법은?
- public static 반환타입 함수명(매개변수){}

4. 리턴 타입 void 는 어떠한 경우에 쓰는가?
- 리턴할 것이 없는 경우에 쓴다.

5. 아래를 함수로 만드시오.

starPrint2(5) 

출력
*****
 ****
  ***
   **
    *

5. 아래를 함수로 만드시오.

starPrint3(5) 

출력
   
    *   
   ***
  *****
 *******
*********



6.아래의 함수를 만드시오. 		

char grade;
double avg = 80;

grade = getGrade(avg);

// 우 입니다.
System.out.println(grade + " 입니다.");

public static void main(String[] args) {
		char grade;
		double avg = 80;
		grade = getGrade(avg);
		System.out.println(grade + "입니다.");
	}
	public static char getGrade(double avg) {
		if (avg >= 90) {
			return '수';
		}
		else if (avg >= 80) {
			return '우';
		}
		else if (avg >= 70) {
			return '미';
		} else {
			return '가';
		}
	}

7.아래의 함수를 만드시오. 

int sum = getHap(1,100);
//5050
System.out.println(sum);

8.아래의 함수를 만드시오. 

int sum = getHap(1,100);
//5050
System.out.println(sum);

public static void main(String[] args) {
		int sum = getHap(1,100);
		//505
		System.out.println(sum);
	}
	
	public static int getHap(int num1, int num2) {
		int sum = 0;
		for (num1 = 1; num1 <= num2; num1++) {
			sum += num1;
		}
		return sum;
	}

8.아래의 함수를 만드시오. 


int count = get57(1,100);
//count 는 1부터 100 까지의 숫자중 5의 배수 이자 7의 배수인 수의 갯수
System.out.println(count );

public static void main(String[] args) {
		int count = get57(1,100);
		System.out.println(count + "개 입니다.");
	}
	public static int get57(int start, int end) {
		int count = 0;
		for(start = 1; start <= end; start++) {
			if ((start % 5 == 0) && (start % 7 == 0)) {
				count++;
			}
		}
		return count;
	}


9.아래의 함수를 만드시오. 

printGuGudan(3)// 3단 출력
printGuGudan(4)// 4단 출력

public static void main(String[] args) {
		printGuGudan(3);
		printGuGudan(4);
		
	}
	public static void printGuGudan(int dan) {
		for (int i = 1; i <= 9; i++) {
			int result = dan * i;
			System.out.println(dan + " * " + i + " = " + result);
		}
		System.out.println();
	}


10.아래의 함수를 만드시오. 

getRecArea(3,5) //삼각형 넓이
getRecCirlce(5) //원넓이
getTriangleArea(4 , 5) //삼각형 넓이

public static void main(String[] args) {
		getRecArea(3,5); //사각형 넓이
		getRecCircle(5); //원 넓이
		getTriangleArea(4,5); //삼각형 넓이
	}

	public static void getTriangleArea(double width, double height) {
		double result = width * height / 2;
		System.out.println("삼각형의 넓이는 " + result + "입니다.");
	}

	public static void getRecCircle(double radius) {
		final double PI = 3.14;
		double result = radius * radius * PI;
		System.out.println("원의 넓이는 " + result + "입니다.");
	}

	public static void getRecArea(double width, double height) {
		double result = width * height;
		System.out.println("사각형의 넓이는 " + result + "입니다.");
	}

11. 함수로 만들면 좋은점은?
-같은 작업을(중복) 하지 않기 위해
-기능이 2번 이상 중복되면 반드시 함수로 만들것.

12.아래의 함수를 만드시오. 
int month = 4;

getSeason(3)// 봄입니다. 출력
getSeason(12)// 겨울 입니다. 출력

public static void main(String[] args) {
		getSeason(3);
    getSeason(12);
	}

	public static void getSeason(int month) {
		switch (month) {
		case 1: case 2: case 3: case 4:
			System.out.println("봄입니다.");
			break;
		case 5: case 6: case 7: case 8:
			System.out.println("여름입니다.");
			break;
		case 9: case 10: case 11: case 12:
			System.out.println("겨울입니다.");
			break;
		default:
			System.out.println("잘못 된 입력입니다.");
		}
	}
