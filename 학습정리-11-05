1. 블록 태그와 인라인 태그에 대하여 설명하시오.
- 블록 태그는 한 줄을 전부 차지하는 태그이며 인라인 태그는 자기 자신만을 범위로 갖는 태그이다.

2. 블록 태그와 인라인 태그의 종류를 나열 하시오.
블록 태그 : <div>, <form>, <h1>, <h2>, <h3>, <h4>, <h5>, <h6>, <header>, <ol>, <ul> 등등
인라인 태그 : <a>, <b>, <br/>, <button>, <i>, <img>, <input>, <select>, <span>, <sub>, <sup>, <textarea> 등등
   
3. 선택자 # 과 . 에 대하여 설명하시오.
# : id에 적용되는 선택자
. : 클래스에 적용되는 선택자

4. 아래를 프로그래밍 하시오.

- 원객체 생성
- ArrayList 에 차례대로 반지름이 1인 원 부터 10인원을 입력.
- 차례대로 각각의 원 넓이 출력 
- 10개의 원넓이 합산 하여 출력.

import java.util.ArrayList;
import java.util.List;

class Circle{
	private int radius;
	public Circle(int radius) {
		this.radius = radius;
	}
	
	public double getArea() {
		return radius * radius * Math.PI;
	}
	
	public void setRadius(int radius) {
		this.radius = radius;
	}
	
	public int getRadius() {
		return radius;
	}
}

public static void main(String[] args) {
		List<Circle> list = new ArrayList<>();
		double sum = 0;
		
		for (int i = 1; i <= 10; i++) {
			list.add(new Circle(i));
		}
		
		for (int i = 0; i < 10; i++) {
			Circle c = list.get(i);
			System.out.println("반지름이 " + c.getRadius() + "인 원의 넓이는 : " + c.getArea());
		}
		
		for (Circle c : list) {
			sum = sum + c.getArea();
		}
		System.out.println();
		System.out.println("모든 원의 넓이의 합은 : " + sum + "입니다.");
	}

5. ArrayList 와 LinkedList 의 차이는?
ArrayList : 배열 기반 자료구조, 배열을 이용하여 인스턴스 저장
LinkedList : 리스트 기반 자료구조, 리스트를 구성하여 인스턴스 저장

6. 5명의 별명을 입력 받아 ArrayList에 저장하고 이들 중 별명의 길이가
제일 긴 별명을 출력하시오. (단, 각 별명의 길이는 모두 다르게 입력한다.)

import java.util.ArrayList;
import java.util.Scanner;

class Person{
	public static int COUNT = 5;
	ArrayList<String> nickName;
	
	
	public Person() {
		nickName = new ArrayList<>();
	}
	
	public ArrayList<String> printNickName() {
		Scanner sc = new Scanner(System.in);
		for (int i = 1; i <= COUNT; i++) {
			System.out.println(i + "번째 별명을 입력하세요");
			String name = sc.next();
			
			if (i > 1) {
				for (int j = 0; j < i-1; j++) {
					if(nickName.get(j).length() == name.length()) {
						System.out.println("별명의 길이는 같을 수 없습니다. 다시 입력해주세요");
						i--;
						continue;
					}
				}
			}
			nickName.add(name);
		}
		return nickName;
	}

	public void printMaxNickName() {
		int max = 0;
		
		String name = null;
		
		for(String s : nickName) {
			if (max < s.length()) {
				max = s.length();
				name = s;
			}
		}
		System.out.println("가장 긴 별명 : " + name);
	}
}

public static void main(String[] args) {
		Person p = new Person();
		p.printNickName();
		p.printMaxNickName();
	}


7.Scanner 클래스로 -1이 입력될 때까지 양의 정수를 입력받아 List에 저장하고 
List를 검색하여 가장 큰 수를 출력하는 프로그램을 작성하라.

정수(-1이 입력될 때까지)>> 10 6 22 6 88 77 -1

가장 큰 수는 88

import java.util.ArrayList;
import java.util.Scanner;

class Num{
	private int num;
	ArrayList<Integer> list;
	
	public Num() {
		list = new ArrayList<>();
	}
	
	public void printMaxNum() {
		int max = 0;
		Scanner sc = new Scanner(System.in);
		System.out.print("정수(-1이 입력될 때 까지)>> ");
		
		while(true) {
			num = sc.nextInt();
		
			if (max < num) {
				max = num;
			}
			
			if(num == -1) {
				System.out.println("가장 큰 수는 " + max + "입니다.");
				break;
			}
			list.add(num);
		}
		
		for (Integer n : list)
			System.out.print(n + "\t");
	}
}

public static void main(String[] args) {
		Num n = new Num();
		n.printMaxNum();
	}


8.Scanner 클래스를 사용하여 6개 학점('A', 'B', 'C', 'D', 'F')을 문자로 입력받아 ArrayList에 저장하고, ArrayList를 검색하여 학점을 점수(A=4.0, B=3.0, C=2.0, D=1.0, F=0)로 변환하여 평균을 출력하는 프로그램을 작성하라.

6개의 학점을 빈 칸으로 분리 입력(A/B/C/D/F) >> A C A B F D

2.3333333333333335

public static void main(String[] args) {
		final int GRADE = 6;
		char score_type;
		Scanner sc = new Scanner(System.in);
		ArrayList<Character> avg_ch = new ArrayList<>();
		
		
		try {
		System.out.print("6개의 학점을 빈 칸으로 분리 입력(A/B/C/D/F) >> ");
		for(int i = 0; i < GRADE; i++) {
			score_type = sc.next().charAt(0);
			
			switch (score_type) {
			case 'A', 'a', 'b', 'B', 'c', 'C', 'd', 'D', 'f', 'F': 
				break;
			default:
				throw new InputMismatchException();
			}
			avg_ch.add(score_type);
		}
		double sum = 0;
		
		for(int i = 0; i < avg_ch.size(); i++) {
			char c = avg_ch.get(i);
			switch (c) {
			case 'a', 'A': 
				sum += 4.0;
				break;
			case 'b', 'B':
				sum += 3.0;
				break;
			case 'c', 'C':
				sum += 2.0;
				break;
			case 'd', 'D':
				sum += 1.0;
				break;
			case 'f', 'F':
				sum += 0.0;
				break;
			default:
				throw new InputMismatchException();
			}
		}
		double avg = sum / avg_ch.size();
		System.out.println(avg);
		} catch(Exception e) {
			System.out.println("잘못 입력하셨습니다. 처음부터 다시 입력해주세요");
			main(args);
		}
	}

9.하나의 학생 정보를 나타내는 Student 클래스에는 이름, 학과, 학번, 학점 평균을 저장하는 필드가 있다.

(1) 학생마다 Student 객체를 생성하고 4명의 학생 정보를 ArrayList<Student> 컬렉션에 저장한 후에, ArrayList<Student>의 모든 학생(4명) 정보를 출력하고 학생 이름을 입력받아 해당 학생의 학점 평균을 출력하는 프로그램을 작성하라.

학생 이름, 학과, 학번, 학점평균 입력하세요.

>> 황기태, 모바일, 1, 4.1

>> 이재문, 안드로이드, 2, 3.9

>> 김남윤, 웹공학, 3, 3.5

>> 최찬미, 빅데이터, 4, 4.25

----------------------------------

이름: 황기태

학과: 모바일

학번: 1

학점평균: 4.1

----------------------------------

이름: 이재문

학과: 안드로이드

학번: 2

학점평균: 3.9

----------------------------------

이름: 김남윤

학과: 웹공학

학번: 3

학점평균: 3.5

----------------------------------

이름: 최찬미

학과: 빅데이터

학번: 4

학점평균: 4.25

----------------------------------

학생 이름 >> 최찬미

최찬미, 빅데이터, 4, 4.25

학생 이름 >> 이재문

이재문, 안드로이드, 2, 3.9

학생 이름 >> 그만
